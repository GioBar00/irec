load("//tools/lint:go.bzl", "go_library")
load("//:scion.bzl", "scion_go_binary")

scion_go_binary(
    name = "bench",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "build_ubpf.go",
        "config.go",
        "main.go",
        "selection_algo.go",
    ],
    importpath = "github.com/scionproto/scion/bench",
    visibility = ["//visibility:private"],
    deps = [
        "//bench/mock/ingress/sqlite:go_default_library",
        "//control/beacon:go_default_library",
        "//control/irec/ingress:go_default_library",
        "//control/irec/ingress/storage:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/grpc:go_default_library",
        "//pkg/irec/includes/flatbuffers-go/irec:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/xtest/graph:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/segment/extensions/staticinfo:go_default_library",
        "//pkg/slayers/path:go_default_library",
        "//pkg/snet:go_default_library",
        "//private/app:go_default_library",
        "//private/config:go_default_library",
        "//private/env:go_default_library",
        "//rac/config:go_default_library",
        "//rac/env/ebpf:go_default_library",
        "//rac/env/native:go_default_library",
        "//rac/env/wasm:go_default_library",
        "@com_github_google_flatbuffers//go:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
        "@org_golang_google_grpc//resolver:go_default_library",
        "@org_golang_google_grpc//stats:go_default_library",
        "@org_golang_x_sync//errgroup:go_default_library",
    ],
)
