#ifndef IREC_VERIFIER_H
#define IREC_VERIFIER_H

/* Generated by flatcc 0.6.2 FlatBuffers schema compiler for C by dvide.com */

#ifndef IREC_READER_H
#include "irec_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#include "flatcc/flatcc_prologue.h"

static int IREC_LatencyInfo_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_BandwidthInfo_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_GeoCoordinates_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_StaticInfoExt_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_SignedExtensions_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_UnsignedExtensions_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_ASEntry_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_Beacon_verify_table(flatcc_table_verifier_descriptor_t *td);
static int IREC_Execution_verify_table(flatcc_table_verifier_descriptor_t *td);

static inline int IREC_Interface_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, IREC_Interface_identifier, 4, 4);
}

static inline int IREC_Interface_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, IREC_Interface_type_hash, 4, 4);
}

static inline int IREC_Interface_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 4, 4);
}

static inline int IREC_Interface_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 4, 4);
}

static inline int IREC_MapEntryUlongUint_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, IREC_MapEntryUlongUint_identifier, 16, 8);
}

static inline int IREC_MapEntryUlongUint_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, IREC_MapEntryUlongUint_type_hash, 16, 8);
}

static inline int IREC_MapEntryUlongUint_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 16, 8);
}

static inline int IREC_MapEntryUlongUint_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 16, 8);
}

static inline int IREC_MapEntryUlongUlong_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, IREC_MapEntryUlongUlong_identifier, 16, 8);
}

static inline int IREC_MapEntryUlongUlong_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, IREC_MapEntryUlongUlong_type_hash, 16, 8);
}

static inline int IREC_MapEntryUlongUlong_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 16, 8);
}

static inline int IREC_MapEntryUlongUlong_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 16, 8);
}

static inline int IREC_HiddenPathExt_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, IREC_HiddenPathExt_identifier, 1, 1);
}

static inline int IREC_HiddenPathExt_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, IREC_HiddenPathExt_type_hash, 1, 1);
}

static inline int IREC_HiddenPathExt_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 1, 1);
}

static inline int IREC_HiddenPathExt_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 1, 1);
}

static inline int IREC_IrecExt_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, IREC_IrecExt_identifier, 4, 4);
}

static inline int IREC_IrecExt_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, IREC_IrecExt_type_hash, 4, 4);
}

static inline int IREC_IrecExt_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 4, 4);
}

static inline int IREC_IrecExt_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 4, 4);
}

static inline int IREC_HopField_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, IREC_HopField_identifier, 24, 8);
}

static inline int IREC_HopField_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, IREC_HopField_type_hash, 24, 8);
}

static inline int IREC_HopField_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 24, 8);
}

static inline int IREC_HopField_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 24, 8);
}

static inline int IREC_PeerEntry_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, IREC_PeerEntry_identifier, 48, 8);
}

static inline int IREC_PeerEntry_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, IREC_PeerEntry_type_hash, 48, 8);
}

static inline int IREC_PeerEntry_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_struct_as_typed_root(buf, bufsiz, thash, 48, 8);
}

static inline int IREC_PeerEntry_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_struct_as_root(buf, bufsiz, fid, 48, 8);
}

static int IREC_LatencyInfo_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 16, 8, INT64_C(268435455)) /* intra */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 16, 8, INT64_C(268435455)) /* inter */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_LatencyInfo_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_LatencyInfo_identifier, &IREC_LatencyInfo_verify_table);
}

static inline int IREC_LatencyInfo_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_LatencyInfo_type_identifier, &IREC_LatencyInfo_verify_table);
}

static inline int IREC_LatencyInfo_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_LatencyInfo_verify_table);
}

static inline int IREC_LatencyInfo_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_LatencyInfo_verify_table);
}

static int IREC_BandwidthInfo_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 16, 8, INT64_C(268435455)) /* intra */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 16, 8, INT64_C(268435455)) /* inter */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_BandwidthInfo_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_BandwidthInfo_identifier, &IREC_BandwidthInfo_verify_table);
}

static inline int IREC_BandwidthInfo_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_BandwidthInfo_type_identifier, &IREC_BandwidthInfo_verify_table);
}

static inline int IREC_BandwidthInfo_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_BandwidthInfo_verify_table);
}

static inline int IREC_BandwidthInfo_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_BandwidthInfo_verify_table);
}

static int IREC_GeoCoordinates_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* ifId */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 4, 4) /* latitude */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* longitude */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 3, 0) /* address */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_GeoCoordinates_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_GeoCoordinates_identifier, &IREC_GeoCoordinates_verify_table);
}

static inline int IREC_GeoCoordinates_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_GeoCoordinates_type_identifier, &IREC_GeoCoordinates_verify_table);
}

static inline int IREC_GeoCoordinates_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_GeoCoordinates_verify_table);
}

static inline int IREC_GeoCoordinates_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_GeoCoordinates_verify_table);
}

static int IREC_StaticInfoExt_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &IREC_LatencyInfo_verify_table) /* latency */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 1, 0, &IREC_BandwidthInfo_verify_table) /* bandwidth */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 2, 0, &IREC_GeoCoordinates_verify_table) /* geo */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 16, 8, INT64_C(268435455)) /* link_type */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 4, 0, 16, 8, INT64_C(268435455)) /* internal_hops */)) return ret;
    if ((ret = flatcc_verify_string_field(td, 5, 0) /* note */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_StaticInfoExt_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_StaticInfoExt_identifier, &IREC_StaticInfoExt_verify_table);
}

static inline int IREC_StaticInfoExt_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_StaticInfoExt_type_identifier, &IREC_StaticInfoExt_verify_table);
}

static inline int IREC_StaticInfoExt_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_StaticInfoExt_verify_table);
}

static inline int IREC_StaticInfoExt_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_StaticInfoExt_verify_table);
}

static int IREC_SignedExtensions_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &IREC_StaticInfoExt_verify_table) /* static_info */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 1, 1) /* hidden_path */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* irec */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_SignedExtensions_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_SignedExtensions_identifier, &IREC_SignedExtensions_verify_table);
}

static inline int IREC_SignedExtensions_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_SignedExtensions_type_identifier, &IREC_SignedExtensions_verify_table);
}

static inline int IREC_SignedExtensions_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_SignedExtensions_verify_table);
}

static inline int IREC_SignedExtensions_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_SignedExtensions_verify_table);
}

static int IREC_UnsignedExtensions_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    return flatcc_verify_ok;
}

static inline int IREC_UnsignedExtensions_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_UnsignedExtensions_identifier, &IREC_UnsignedExtensions_verify_table);
}

static inline int IREC_UnsignedExtensions_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_UnsignedExtensions_type_identifier, &IREC_UnsignedExtensions_verify_table);
}

static inline int IREC_UnsignedExtensions_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_UnsignedExtensions_verify_table);
}

static inline int IREC_UnsignedExtensions_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_UnsignedExtensions_verify_table);
}

static int IREC_ASEntry_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_field(td, 0, 8, 8) /* isd_as */)) return ret;
    if ((ret = flatcc_verify_field(td, 1, 8, 8) /* next_isd_as */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* he_ingress_mtu */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 24, 8) /* hop_field */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 4, 0, 48, 8, INT64_C(89478485)) /* peer_entries */)) return ret;
    if ((ret = flatcc_verify_field(td, 5, 4, 4) /* mtu */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 6, 0, &IREC_SignedExtensions_verify_table) /* extensions */)) return ret;
    if ((ret = flatcc_verify_table_field(td, 7, 0, &IREC_UnsignedExtensions_verify_table) /* unsigned_extensions */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_ASEntry_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_ASEntry_identifier, &IREC_ASEntry_verify_table);
}

static inline int IREC_ASEntry_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_ASEntry_type_identifier, &IREC_ASEntry_verify_table);
}

static inline int IREC_ASEntry_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_ASEntry_verify_table);
}

static inline int IREC_ASEntry_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_ASEntry_verify_table);
}

static int IREC_Beacon_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 1, 1, INT64_C(4294967295)) /* segment_info */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 1, 0, &IREC_ASEntry_verify_table) /* as_entries */)) return ret;
    if ((ret = flatcc_verify_field(td, 2, 4, 4) /* inIfId */)) return ret;
    if ((ret = flatcc_verify_field(td, 3, 4, 4) /* id */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_Beacon_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_Beacon_identifier, &IREC_Beacon_verify_table);
}

static inline int IREC_Beacon_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_Beacon_type_identifier, &IREC_Beacon_verify_table);
}

static inline int IREC_Beacon_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_Beacon_verify_table);
}

static inline int IREC_Beacon_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_Beacon_verify_table);
}

static int IREC_Execution_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_vector_field(td, 0, 0, &IREC_Beacon_verify_table) /* beacons */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 1, 1, INT64_C(4294967295)) /* algHash */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 4, 4, INT64_C(1073741823)) /* intfs */)) return ret;
    return flatcc_verify_ok;
}

static inline int IREC_Execution_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_Execution_identifier, &IREC_Execution_verify_table);
}

static inline int IREC_Execution_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, IREC_Execution_type_identifier, &IREC_Execution_verify_table);
}

static inline int IREC_Execution_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &IREC_Execution_verify_table);
}

static inline int IREC_Execution_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &IREC_Execution_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* IREC_VERIFIER_H */
