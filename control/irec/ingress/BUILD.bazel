load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "handler.go",
        "ingress_server.go",
        "ingress_server_notiming.go",
        "ingress_server_ubpf.go",
        "legacy_ingress.go",
    ],
    importpath = "github.com/scionproto/scion/control/irec/ingress",
    visibility = ["//visibility:public"],
    deps = [
        "//control/beacon:go_default_library",
        "//control/config:go_default_library",
        "//control/ifstate:go_default_library",
        "//control/irec/egress:go_default_library",
        "//control/irec/ingress/storage:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/grpc:go_default_library",
        "//pkg/irec/includes/flatbuffers-go/irec:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/slayers/path/scion:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/addrutil:go_default_library",
        "//private/procperf:go_default_library",
        "//private/app/appnet:go_default_library",
        "//private/segment/segverifier:go_default_library",
        "//private/segment/verifier:go_default_library",
        "//private/topology:go_default_library",
        "@com_github_google_flatbuffers//go:go_default_library",
        "@com_github_opentracing_opentracing_go//:go_default_library",
        "@org_golang_google_grpc//codes:go_default_library",
        "@org_golang_google_grpc//peer:go_default_library",
        "@org_golang_google_grpc//status:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "handler_test.go",
        "ingress_server_test.go",
    ],
    embed = [":go_default_library"],
)
