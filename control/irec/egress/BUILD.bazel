load("//tools/lint:go.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "core_originator.go",
        "extending.go",
        "pathregistrar.go",
        "propagator.go",
        "pullbased.go",
        "sender.go",
        "staticextension.go",
        "util.go",
    ],
    importpath = "github.com/scionproto/scion/control/irec/egress",
    visibility = ["//visibility:public"],
    deps = [
        "//control/beacon:go_default_library",
        "//control/ifstate:go_default_library",
        "//control/irec/egress/storage:go_default_library",
        "//control/onehop:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/grpc:go_default_library",
        "//pkg/log:go_default_library",
        "//pkg/metrics:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/prom:go_default_library",
        "//pkg/private/serrors:go_default_library",
        "//pkg/private/util:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/segment/extensions/digest:go_default_library",
        "//pkg/segment/extensions/epic:go_default_library",
        "//pkg/segment/extensions/irec:go_default_library",
        "//pkg/segment/extensions/staticinfo:go_default_library",
        "//pkg/slayers/path:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/addrutil:go_default_library",
        "//private/segment/seghandler:go_default_library",
        "//private/topology:go_default_library",
        "@org_golang_google_grpc//:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "core_originator_test.go",
        "extending_test.go",
        "pathregistrar_test.go",
        "propagator_test.go",
        "pullbased_test.go",
        "staticextension_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "//control/beacon:go_default_library",
        "//control/ifstate:go_default_library",
        "//control/irec/egress/mock_egress:go_default_library",
        "//control/irec/egress/storage/mock_egress_storage:go_default_library",
        "//pkg/addr:go_default_library",
        "//pkg/private/common:go_default_library",
        "//pkg/private/util:go_default_library",
        "//pkg/private/xtest/graph:go_default_library",
        "//pkg/proto/control_plane:go_default_library",
        "//pkg/proto/crypto:go_default_library",
        "//pkg/scrypto:go_default_library",
        "//pkg/scrypto/cppki:go_default_library",
        "//pkg/scrypto/signed:go_default_library",
        "//pkg/segment:go_default_library",
        "//pkg/segment/extensions/irec:go_default_library",
        "//pkg/segment/extensions/staticinfo:go_default_library",
        "//pkg/slayers/path/scion:go_default_library",
        "//pkg/snet:go_default_library",
        "//pkg/snet/addrutil:go_default_library",
        "//pkg/snet/path:go_default_library",
        "//private/segment/seghandler:go_default_library",
        "//private/topology:go_default_library",
        "//private/trust:go_default_library",
        "@af_inet_netaddr//:go_default_library",
        "@com_github_golang_mock//gomock:go_default_library",
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_x_exp//slices:go_default_library",
    ],
)
